<!DOCTYPE html>
<html>
  <head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
        width: 100;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body>
	      <div id="floating-panel">
    <b>Mode of Travel: </b>
    <select id="mode">
      <option value="DRIVING">Driving</option>
      <option value="WALKING">Walking</option>
      <option value="BICYCLING">Bicycling</option>
      <option value="TRANSIT">Transit</option>
    </select>
    </div>
    <div id="map"></div>
    <script>
      var map;


      function initMap() {
        var directionsRenderer = new google.maps.DirectionsRenderer;
        var directionsService = new google.maps.DirectionsService;
        var worcester = {lat: 42.2626, lng: -71.8023};
        var latStr = worcester.lat;
        var longStr = worcester.lng;
        map = new google.maps.Map(document.getElementById('map'), {
          center: worcester,
          zoom: 10
        });
	              
        var contentString = "<h1>Latitude</h1><h2>" + latStr + "</h2>" +
                             "<h1>Longitude</h1><h2>" + longStr + "</h2>" +
                              "<h1>Clinic Name</h1><h2>" + "The one over at " + latStr + ", " + longStr + "!" + "</h2>";
        var infowindowtwo = new google.maps.InfoWindow({
          content: contentString
        });
        var marker = new google.maps.Marker({position: worcester, 
                                             map: map,
                                             animation: google.maps.Animation.DROP});
        var icon = {
          url: "clinic.svg",
          scaledSize: new google.maps.Size(55, 55),
        };
        marker.setIcon(icon);
        
        marker.addListener('click', function() {
          infowindowtwo.open(map, marker);
        });
;
        var infoWindow = new google.maps.InfoWindow;
	      var pos;
// Try HTML5 geolocation.
        if (navigator.geolocation) {
          console.log("HIIIII");
          navigator.geolocation.getCurrentPosition(function(position) {
            pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            infoWindow.setPosition(pos);
            infoWindow.setContent('<h2><font color="green">You are located here!</font></h2>');
            infoWindow.open(map);
            map.setCenter(pos);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }
        document.getElementById('mode').addEventListener('change', function() {
          calculateAndDisplayRoute(directionsService, directionsRenderer, worcester, pos);
        });
	      	directionsRenderer.setMap(map);

        calculateAndDisplayRoute(directionsService, directionsRenderer, worcester, pos);
      }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }
        
      function calculateAndDisplayRoute(directionsService, directionsRenderer, worcester, pos) {
        var selectedMode = document.getElementById('mode').value;
        directionsService.route({
          origin: {lat: pos.lat, lng: pos.lng},  // Haight.
          destination: {lat: worcester.lat, lng: worcester.lng},  // Ocean Beach.
          // Note that Javascript allows us to access the constant
          // using square brackets and a string value as its
          // "property."
          travelMode: google.maps.TravelMode[selectedMode]
        }, function(response, status) {
          if (status == 'OK') {
            directionsRenderer.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBJuhnuWFA1aqCKGC_EsdiQxZbhZx-36zE&callback=initMap"
    async defer></script>
  </body>
</html>
